// –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
console.log('üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...');

async function testFinal() {
  try {
    // –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ —Ç–∏–ø–æ–≤
    console.log('üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ —Ç–∏–ø–æ–≤...');
    const { GAME_STATES, PLAYER_STATES, CELL_TYPES } = await import('./src/modules/game-board/types/index.js');
    console.log('‚úÖ –¢–∏–ø—ã —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    console.log('   - GAME_STATES:', Object.keys(GAME_STATES));
    console.log('   - PLAYER_STATES:', Object.keys(PLAYER_STATES));
    console.log('   - CELL_TYPES:', Object.keys(CELL_TYPES));

    // –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ —Ö—É–∫–æ–≤
    console.log('\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ —Ö—É–∫–æ–≤...');
    const { useGameState } = await import('./src/modules/game-board/hooks/useGameState.js');
    const { useUIState } = await import('./src/modules/game-board/hooks/useUIState.js');
    const { useGameLogic } = await import('./src/modules/game-board/hooks/useGameLogic.js');
    console.log('‚úÖ –•—É–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    console.log('   - useGameState:', typeof useGameState);
    console.log('   - useUIState:', typeof useUIState);
    console.log('   - useGameLogic:', typeof useGameLogic);

    // –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö...');
    const { MarketDeckManager } = await import('./src/data/marketCards.js');
    const { ExpenseDeckManager } = await import('./src/data/expenseCards.js');
    const { CELL_CONFIG } = await import('./src/data/gameCells.js');
    const { PLAYER_COLORS } = await import('./src/styles/playerColors.js');
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    console.log('   - MarketDeckManager:', typeof MarketDeckManager);
    console.log('   - ExpenseDeckManager:', typeof ExpenseDeckManager);
    console.log('   - CELL_CONFIG:', Array.isArray(CELL_CONFIG));
    console.log('   - PLAYER_COLORS:', Array.isArray(PLAYER_COLORS));

    // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    console.log('\nüèóÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤...');
    const marketDeck = new MarketDeckManager();
    const expenseDeck = new ExpenseDeckManager();
    console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    console.log('   - marketDeck.cards:', Array.isArray(marketDeck.cards));
    console.log('   - expenseDeck.cards:', Array.isArray(expenseDeck.cards));

    // –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
    console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏...');
    const marketCard = marketDeck.drawCard();
    const expenseCard = expenseDeck.drawCard();
    console.log('‚úÖ –ö–∞—Ä—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    console.log('   - marketCard:', marketCard);
    console.log('   - expenseCard:', expenseCard);

    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log('   ‚úÖ –¢–∏–ø–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: 3');
    console.log('   ‚úÖ –•—É–∫–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: 3');
    console.log('   ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: 2');
    console.log('   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω–æ: 2');
    console.log('   ‚úÖ –ú–æ–¥—É–ª–µ–π —Å–æ–∑–¥–∞–Ω–æ: 1');
    console.log('   ‚úÖ –§–∞–π–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: 15+');

    console.log('\nüèÜ –ú–û–î–£–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê!');
    console.log('\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:');
    console.log('   npm start');
    console.log('\nüîß –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:');
    console.log('   npm run dev');
    console.log('\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:');
    console.log('   README.md - –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è');
    console.log('   MIGRATION.md - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏');
    console.log('   REFACTORING_REPORT.md - –æ—Ç—á–µ—Ç –æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–µ');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error('Stack trace:', error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testFinal();
