#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –Ω–∞ Render
 */

const axios = require('axios');

const RENDER_URL = 'https://botenergy-7to1.onrender.com';

async function checkStatus() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –Ω–∞ Render...\n');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
        console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º health check...');
        const healthResponse = await axios.get(`${RENDER_URL}/health`);
        console.log('‚úÖ Health check:', healthResponse.data);
    } catch (error) {
        console.log('‚ùå Health check failed:', error.message);
    }
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        console.log('\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
        const imagesResponse = await axios.get(`${RENDER_URL}/api/images`);
        console.log('‚úÖ API –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('üì∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', Object.keys(imagesResponse.data).length);
    } catch (error) {
        console.log('‚ùå API –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π failed:', error.message);
    }
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        console.log('\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
        const mainResponse = await axios.get(`${RENDER_URL}/`);
        console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('üìÑ –°—Ç–∞—Ç—É—Å:', mainResponse.data.status);
    } catch (error) {
        console.log('‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ failed:', error.message);
    }
    
    console.log('\nüéØ –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
}

checkStatus().catch(console.error);
