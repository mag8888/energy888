import { Bot } from 'grammy';
import dotenv from 'dotenv';

dotenv.config();

const bot = new Bot(process.env.BOT_TOKEN);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ç–æ–∫–µ–Ω–æ–º
bot.command('start', async (ctx) => {
  const token = ctx.message.text.split(' ')[1]; // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–º–∞–Ω–¥—ã
  
  if (!token) {
    await ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –∏–≥—Ä—ã –¥–ª—è –≤—Ö–æ–¥–∞.');
    return;
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  try {
    const user = ctx.from;
    const response = await fetch(`${process.env.SOCKET_URL || 'http://localhost:4000'}/tg/authorize`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.BOT_TOKEN}`
      },
      body: JSON.stringify({
        token,
        id: user.id,
        username: user.username,
        first_name: user.first_name,
        last_name: user.last_name,
        photo_url: user.photo_url
      })
    });

    const result = await response.json();
    
    if (result.ok) {
      await ctx.reply('‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ Energy of Money!');
    } else {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥
bot.command('help', async (ctx) => {
  await ctx.reply('üéÆ Energy of Money Bot\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –∏–≥—Ä—ã –¥–ª—è –≤—Ö–æ–¥–∞.');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.start();
console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
