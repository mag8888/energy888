#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Railway
const https = require('https');

const RAILWAY_URL = 'https://money8888-production.up.railway.app';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Railway...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ endpoint
function checkEndpoint(path, expectedStatus = 200) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'money8888-production.up.railway.app',
      port: 443,
      path: path,
      method: 'GET',
      timeout: 10000
    };

    const req = https.request(options, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        if (res.statusCode === expectedStatus) {
          console.log(`‚úÖ ${path} - OK (${res.statusCode})`);
          resolve({ status: 'success', data: data });
        } else {
          console.log(`‚ùå ${path} - FAILED (${res.statusCode})`);
          resolve({ status: 'error', statusCode: res.statusCode, data: data });
        }
      });
    });

    req.on('error', (error) => {
      console.log(`‚ùå ${path} - ERROR: ${error.message}`);
      resolve({ status: 'error', error: error.message });
    });

    req.on('timeout', () => {
      console.log(`‚ùå ${path} - TIMEOUT`);
      req.destroy();
      resolve({ status: 'timeout' });
    });

    req.end();
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook
function checkWebhook() {
  return new Promise((resolve, reject) => {
    const postData = JSON.stringify({
      test: true,
      message: {
        message_id: 1,
        from: { id: 123, first_name: 'Test' },
        chat: { id: 123 },
        text: '/start'
      }
    });

    const options = {
      hostname: 'money8888-production.up.railway.app',
      port: 443,
      path: '/webhook',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': Buffer.byteLength(postData)
      },
      timeout: 10000
    };

    const req = https.request(options, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        if (res.statusCode === 200) {
          console.log(`‚úÖ /webhook - OK (${res.statusCode})`);
          resolve({ status: 'success', data: data });
        } else {
          console.log(`‚ùå /webhook - FAILED (${res.statusCode})`);
          resolve({ status: 'error', statusCode: res.statusCode, data: data });
        }
      });
    });

    req.on('error', (error) => {
      console.log(`‚ùå /webhook - ERROR: ${error.message}`);
      resolve({ status: 'error', error: error.message });
    });

    req.on('timeout', () => {
      console.log(`‚ùå /webhook - TIMEOUT`);
      req.destroy();
      resolve({ status: 'timeout' });
    });

    req.write(postData);
    req.end();
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
async function checkConfiguration() {
  console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
  await checkEndpoint('/');
  await checkEndpoint('/health');
  
  console.log('\nüì® –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook...\n');
  await checkWebhook();
  
  console.log('\nüîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä—É
  try {
    const gameCheck = await checkEndpoint('https://money8888-production.up.railway.app/', 200);
    if (gameCheck.status === 'success') {
      console.log('‚úÖ –ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞');
    } else {
      console.log('‚ùå –ò–≥—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–≥—Ä—ã:', error.message);
  }
  
  console.log('\nüìã –†–µ–∑—é–º–µ:');
  console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ Railway');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç');
  console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('\nüîó –°—Å—ã–ª–∫–∏:');
  console.log(`- Railway: ${RAILWAY_URL}`);
  console.log('- –ë–æ—Ç: https://t.me/energy_m_bot');
  console.log('- –ò–≥—Ä–∞: https://money8888-production.up.railway.app/');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkConfiguration().catch(console.error);
