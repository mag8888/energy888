const express = require('express');
const cors = require('cors');
const axios = require('axios');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('public'));

// Telegram Bot Token (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ .env)
const BOT_TOKEN = process.env.BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';

console.log('üöÄ Starting Energy of Money - Auth Module...');
console.log(`üì° Port: ${PORT}`);

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Energy of Money - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                margin: 0;
                padding: 0;
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .container {
                text-align: center;
                background: white;
                padding: 40px;
                border-radius: 20px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                max-width: 500px;
                margin: 20px;
            }
            h1 {
                color: #333;
                margin-bottom: 20px;
                font-size: 2.5em;
            }
            .auth-section {
                background: #f8f9fa;
                padding: 30px;
                border-radius: 15px;
                margin: 20px 0;
                border-left: 4px solid #667eea;
            }
            .telegram-btn {
                background: #0088cc;
                color: white;
                padding: 15px 30px;
                border: none;
                border-radius: 50px;
                font-size: 1.1em;
                font-weight: bold;
                cursor: pointer;
                text-decoration: none;
                display: inline-block;
                margin: 10px;
                transition: all 0.3s ease;
            }
            .telegram-btn:hover {
                background: #006699;
                transform: translateY(-2px);
            }
            .status {
                background: #4CAF50;
                color: white;
                padding: 15px 30px;
                border-radius: 50px;
                font-size: 1.1em;
                font-weight: bold;
                display: inline-block;
                margin: 20px 0;
            }
            .info {
                background: #e3f2fd;
                padding: 20px;
                border-radius: 10px;
                margin: 20px 0;
                border-left: 4px solid #2196f3;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üéÆ Energy of Money</h1>
            <div class="status">‚úÖ –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!</div>
            
            <div class="auth-section">
                <h3>üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram</h3>
                <p>–í–æ–π–¥–∏—Ç–µ –≤ –∏–≥—Ä—É –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ–π Telegram –∞–∫–∫–∞—É–Ω—Ç</p>
                <a href="#" class="telegram-btn" onclick="startTelegramAuth()">
                    üì± –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
                </a>
            </div>
            
            <div class="info">
                <h3>üìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—è</h3>
                <p>‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram</p>
                <p>‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                <p>‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π</p>
                <p>‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
            </div>
            
            <div class="info">
                <h3>üöÄ –°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è</h3>
                <p><strong>–ú–æ–¥—É–ª—å:</strong> –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</p>
                <p><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> Railway.app</p>
                <p><strong>–í—Ä–µ–º—è:</strong> <span id="time"></span></p>
            </div>
        </div>

        <script>
            function startTelegramAuth() {
                // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
                alert('–§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
            }
            
            function updateTime() {
                const now = new Date();
                document.getElementById('time').textContent = now.toLocaleString('ru-RU');
            }
            updateTime();
            setInterval(updateTime, 1000);
        </script>
    </body>
    </html>
  `);
});

// API –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
app.post('/api/auth/telegram', async (req, res) => {
  try {
    const { initData } = req.body;
    
    if (!initData) {
      return res.status(400).json({ error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏' });
    }

    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ Telegram
    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
    res.json({
      success: true,
      message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞',
      user: {
        id: '12345',
        username: 'test_user',
        first_name: 'Test',
        last_name: 'User'
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
app.get('/api/status', (req, res) => {
  res.json({
    module: 'auth',
    status: 'running',
    timestamp: new Date().toISOString()
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`‚úÖ Auth module running on port ${PORT}`);
  console.log(`üåê Open http://localhost:${PORT} in browser`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('üõë SIGTERM received, shutting down...');
  process.exit(0);
});

process.on('SIGINT', () => {
  console.log('üõë SIGINT received, shutting down...');
  process.exit(0);
});
