// –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
import crypto from 'crypto';

// –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
const BOT_TOKEN = '8480976603:AAEcYvQ51AEQqeVtaJDypGfg_xMcO7ar2rI';
const BOT_NAME = 'energy_m_bot';

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ö–µ—à–∞ (–∫–∞–∫ –≤ API)
function checkTelegramAuth(data, botToken) {
  const authData = { ...data };
  const hash = authData.hash;
  delete authData.hash;

  const secret = crypto.createHash('sha256').update(botToken).digest();
  const checkString = Object.keys(authData)
    .sort()
    .map(k => `${k}=${authData[k]}`)
    .join('\n');
  const hmac = crypto.createHmac('sha256', secret).update(checkString).digest('hex');
  return hmac === hash;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (—Å–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram)
const testData = {
  id: '123456789',
  first_name: 'Test',
  last_name: 'User',
  username: 'testuser',
  photo_url: 'https://t.me/i/userpic/320/testuser.jpg',
  auth_date: Math.floor(Date.now() / 1000).toString(),
  hash: '' // –ë—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω
};

// –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à
const secret = crypto.createHash('sha256').update(BOT_TOKEN).digest();
const checkString = Object.keys(testData)
  .filter(k => k !== 'hash')
  .sort()
  .map(k => `${k}=${testData[k]}`)
  .join('\n');
const correctHash = crypto.createHmac('sha256', secret).update(checkString).digest('hex');
testData.hash = correctHash;

console.log('ü§ñ –¢–µ—Å—Ç Telegram –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏');
console.log('============================');
console.log('');

console.log('1Ô∏è‚É£ –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞:');
console.log('BOT_TOKEN:', BOT_TOKEN);
console.log('BOT_NAME:', BOT_NAME);
console.log('');

console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
console.log(JSON.stringify(testData, null, 2));
console.log('');

console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–µ—à–∞:');
const isValid = checkTelegramAuth(testData, BOT_TOKEN);
console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', isValid ? '‚úÖ –í–ê–õ–ò–î–ù–´–ô' : '‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ô');
console.log('');

console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞:');
console.log('URL: /api/tg-verify');
console.log('–ú–µ—Ç–æ–¥: GET');
console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', new URLSearchParams(testData).toString());
console.log('');

console.log('5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∂–µ—Ç–∞:');
console.log('–°–∫—Ä–∏–ø—Ç: https://telegram.org/js/telegram-widget.js');
console.log('–ê—Ç—Ä–∏–±—É—Ç—ã:');
console.log('  data-telegram-login:', BOT_NAME);
console.log('  data-size: large');
console.log('  data-onauth: onTelegramAuth(user)');
console.log('  data-request-access: write');
console.log('');

console.log('6Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞:');
console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram');
console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ: /setdomain');
console.log('3. –í—ã–±–µ—Ä–∏—Ç–µ: @energy_m_bot');
console.log('4. –£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω: localhost:3000 (–∏–ª–∏ –≤–∞—à ngrok URL)');
console.log('');

console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev');
console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000/auth');
console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "Telegram"');
console.log('4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram"');
console.log('5. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ Telegram');
console.log('6. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
console.log('');

if (isValid) {
  console.log('‚úÖ –í–°–ï –ì–û–¢–û–í–û! Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å.');
} else {
  console.log('‚ùå –û–®–ò–ë–ö–ê! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
}
