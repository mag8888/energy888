import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { useSocket } from '../contexts/SocketContext';
import OriginalGameBoard from '../components/OriginalGameBoard';
import DebugRoomsPanel from '../components/DebugRoomsPanel';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const DEMO_PLAYERS = [
  {
    id: 'player1',
    name: '–ò–≥—Ä–æ–∫ 1',
    position: 0,
    money: 1000,
    isReady: true,
    profession: '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å',
    dream: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å'
  },
  {
    id: 'player2',
    name: '–ò–≥—Ä–æ–∫ 2',
    position: 5,
    money: 800,
    isReady: true,
    profession: '–ò–Ω–≤–µ—Å—Ç–æ—Ä',
    dream: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å'
  },
  {
    id: 'player3',
    name: '–ò–≥—Ä–æ–∫ 3',
    position: 10,
    money: 1200,
    isReady: true,
    profession: '–§–∏–Ω–∞–Ω—Å–∏—Å—Ç',
    dream: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å'
  },
  {
    id: 'player4',
    name: '–ò–≥—Ä–æ–∫ 4',
    position: 15,
    money: 900,
    isReady: true,
    profession: '–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
    dream: '–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥'
  }
];

export default function GameBoardPage() {
  const router = useRouter();
  const { socket, isConnected } = useSocket();
  const [players, setPlayers] = useState(DEMO_PLAYERS);
  const [currentPlayer, setCurrentPlayer] = useState(DEMO_PLAYERS[0]);
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isDemoMode, setIsDemoMode] = useState(true);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –¥–µ–º–æ-—Ä–µ–∂–∏–º–æ–º –∏ —Ä–µ–∞–ª—å–Ω–æ–π –∏–≥—Ä–æ–π
  const toggleDemoMode = () => {
    setIsDemoMode(!isDemoMode);
    if (!isDemoMode) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º
      setPlayers(DEMO_PLAYERS);
      setCurrentPlayer(DEMO_PLAYERS[0]);
      setCurrentIndex(0);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞
  const handleRollDice = () => {
    if (isDemoMode) {
      // –î–µ–º–æ-–±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞
      const dice1 = Math.floor(Math.random() * 6) + 1;
      const dice2 = Math.floor(Math.random() * 6) + 1;
      const total = dice1 + dice2;
      
      console.log('üé≤ –î–µ–º–æ-–±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞:', dice1, '+', dice2, '=', total);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
      setPlayers(prev => prev.map((player, index) => 
        index === currentIndex 
          ? { ...player, position: (player.position || 0) + total }
          : player
      ));
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–≥—Ä–æ–∫—É
      const nextIndex = (currentIndex + 1) % players.length;
      setCurrentIndex(nextIndex);
      setCurrentPlayer(players[nextIndex]);
    } else if (socket) {
      // –†–µ–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞ —á–µ—Ä–µ–∑ —Å–æ–∫–µ—Ç
      socket.emit('roll-dice', { roomId: 'demo-room' });
    }
  };

  const handleBuyCard = (cardId: string, price: number) => {
    if (isDemoMode) {
      // –î–µ–º–æ-–ø–æ–∫—É–ø–∫–∞ –∫–∞—Ä—Ç—ã
      console.log('üí≥ –î–µ–º–æ-–ø–æ–∫—É–ø–∫–∞ –∫–∞—Ä—Ç—ã:', cardId, '–∑–∞', price);
      
      setPlayers(prev => prev.map((player, index) => 
        index === currentIndex 
          ? { ...player, money: (player.money || 0) - price }
          : player
      ));
    } else if (socket) {
      // –†–µ–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞ —á–µ—Ä–µ–∑ —Å–æ–∫–µ—Ç
      socket.emit('buy-card', { roomId: 'demo-room', cardId, price });
    }
  };

  const handleGetGameState = () => {
    if (isDemoMode) {
      console.log('üìä –î–µ–º–æ-—Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:', { players, currentPlayer, currentIndex });
    } else if (socket) {
      socket.emit('get-game-state', { roomId: 'demo-room' });
    }
  };

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)',
      padding: '20px',
      fontFamily: 'Arial, sans-serif'
    }}>
      <div style={{
        maxWidth: '1400px',
        margin: '0 auto'
      }}>
        {/* Header */}
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '30px',
          background: 'rgba(0, 0, 0, 0.8)',
          backdropFilter: 'blur(15px)',
          borderRadius: '15px',
          padding: '20px',
          border: '2px solid rgba(255, 255, 255, 0.3)',
          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)'
        }}>
          <div>
            <h1 style={{
              color: 'white',
              margin: 0,
              fontSize: '2rem',
              fontWeight: 'bold'
            }}>
              üéÆ –ò–≥—Ä–æ–≤–∞—è –¥–æ—Å–∫–∞
            </h1>
            <div style={{
              color: 'rgba(255, 255, 255, 0.7)',
              fontSize: '1rem',
              marginTop: '5px'
            }}>
              {isDemoMode ? 'üé≠ –î–µ–º–æ-—Ä–µ–∂–∏–º' : 'üåê –†–µ–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞'} ‚Ä¢ 
              –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {isConnected ? 'üü¢' : 'üî¥'}
            </div>
          </div>
          <div style={{ display: 'flex', gap: '10px' }}>
            <button
              onClick={toggleDemoMode}
              style={{
                padding: '10px 20px',
                background: isDemoMode 
                  ? 'linear-gradient(45deg, #FF9800, #F57C00)' 
                  : 'linear-gradient(45deg, #4CAF50, #45a049)',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                fontSize: '14px',
                fontWeight: 'bold',
                cursor: 'pointer',
                boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',
                transition: 'all 0.3s ease'
              }}
            >
              {isDemoMode ? 'üé≠ –î–µ–º–æ' : 'üåê –†–µ–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞'}
            </button>
            <button
              onClick={() => router.push('/simple-rooms')}
              style={{
                padding: '10px 20px',
                background: 'rgba(255, 255, 255, 0.2)',
                color: 'white',
                border: '2px solid rgba(255, 255, 255, 0.5)',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: 'bold',
                transition: 'all 0.3s ease'
              }}
            >
              üè† –í –ª–æ–±–±–∏
            </button>
          </div>
        </div>

        {/* –ò–≥—Ä–æ–≤–∞—è –¥–æ—Å–∫–∞ */}
        <OriginalGameBoard
          players={players}
          currentPlayer={currentPlayer}
          currentIndex={currentIndex}
          onRollDice={handleRollDice}
          onBuyCard={handleBuyCard}
          onGetGameState={handleGetGameState}
          isMyTurn={true} // –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å
        />

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∂–∏–º–µ */}
        <div style={{
          background: 'rgba(0, 0, 0, 0.8)',
          backdropFilter: 'blur(15px)',
          borderRadius: '15px',
          padding: '20px',
          marginTop: '20px',
          border: '2px solid rgba(255, 255, 255, 0.3)',
          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)'
        }}>
          <h3 style={{ color: 'white', marginTop: 0, marginBottom: '15px' }}>
            ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∂–∏–º–µ
          </h3>
          <div style={{ color: 'rgba(255, 255, 255, 0.8)', fontSize: '14px', lineHeight: '1.6' }}>
            {isDemoMode ? (
              <>
                <p><strong>üé≠ –î–µ–º–æ-—Ä–µ–∂–∏–º:</strong> –ò–≥—Ä–æ–≤–∞—è –¥–æ—Å–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –í—ã –º–æ–∂–µ—Ç–µ:</p>
                <ul style={{ margin: '10px 0', paddingLeft: '20px' }}>
                  <li>–ë—Ä–æ—Å–∞—Ç—å –∫—É–±–∏–∫ –∏ –≤–∏–¥–µ—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤</li>
                  <li>–ü–æ–∫—É–ø–∞—Ç—å –∫–∞—Ä—Ç—ã –∏ —Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏</li>
                  <li>–ò–∑—É—á–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</li>
                  <li>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ—Å–∫–∏</li>
                </ul>
                <p>–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –∏–≥—Ä—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º "–†–µ–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞" –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ.</p>
              </>
            ) : (
              <>
                <p><strong>üåê –†–µ–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞:</strong> –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–Ω–æ–π –∏–≥—Ä—ã.</p>
                <p>–î–ª—è –∏–≥—Ä—ã —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ –≤ –ª–æ–±–±–∏.</p>
              </>
            )}
          </div>
        </div>
      </div>

      {/* –î–µ–±–∞–≥-–ø–∞–Ω–µ–ª—å */}
      <DebugRoomsPanel />
    </div>
  );
}
